name: CI

on: 
  workflow_dispatch:
  pull_request:
    branches: ["*"]
  merge_group:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Run ESLint
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Create Env file
        run: | 
          touch .env
          echo SKIP_ENV_VALIDATION="true" >> .env
          cat .env
          
      - name: Create Env for SaaS
        working-directory: ./starterkits/saas
        run: | 
          touch .env
          echo SKIP_ENV_VALIDATION="true" >> .env
          cat .env
      

      - name: Install dependencies
        run: pnpm install

      - run: pnpm turbo run lint
      
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2.2.4
        name: Install pnpm
        id: pnpm-install
        with:
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Create Env file
        run: | 
          touch .env
          echo SKIP_ENV_VALIDATION="true" >> .env
          cat .env
          
      - name: Create Env for SaaS
        working-directory: ./starterkits/saas
        run: | 
          touch .env
          echo SKIP_ENV_VALIDATION="true" >> .env
          echo NEXTAUTH_URL="http://localhost:3000" >> .env
          echo RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}" >> .env
          echo NEXTAUTH_SECRET="123" >> .env
          cat .env

      - name: Install dependencies
        run: pnpm install

      - run: pnpm turbo run build
     
